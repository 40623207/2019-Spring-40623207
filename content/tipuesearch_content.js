var tipuesearch = {"pages": [{'title': '介紹', 'text': '分組倉儲 :\xa0 https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g3_1 \n 個人倉儲 :\xa0 https://github.com/40623207/2019-Spring-40623207 \n 全班協同倉儲 :\xa0 https://github.com/scrum-1/cd2019b \n 全班協同個人倉儲 :\xa0 https://github.com/40623207/cd2019b \n 期末報告 \n Onshape 手足球 \n https://cad.onshape.com/documents/e2aff841e3efe05bced66d09/w/c0b1955e1e3c7c89d7bddbc8/e/15a3920124f3878336a016bc \n Onshape\xa0\xa0手足球工程圖 \n https://cad.onshape.com/documents/53c22b4da867c8142bb12aa1/w/31b08ccdf22dccf0dbfd4551/e/d7acd03d8f1d15577d22a16f \n \n 期末考試 \n Onshape 夾娃娃機 \n https://cad.onshape.com/documents/4853abc4c6b0dfde0f5a8187/v/ffc1871d4c9dfebea191d474/e/fa66f9b55cc7d165db8e6a6f \n Onshape 爪子  https://cad.onshape.com/documents/4853abc4c6b0dfde0f5a8187/w/1f54d4647674f65a62a256c4/e/fa66f9b55cc7d165db8e6a6f', 'tags': '', 'url': '介紹.html'}, {'title': '期中進度', 'text': '', 'tags': '', 'url': '期中進度.html'}, {'title': '期中V-rep', 'text': '', 'tags': '', 'url': '期中V-rep.html'}, {'title': '期中Tutorial', 'text': "\n ▲BubbleRob \n BubbleRob \n \n \n Add a primitive sphere of diameter 0.2 to the scene with [Menu bar --> Add --> Primitive shape --> Sphere]. \n Adjust the  X-size  item to 0.2, then click  OK .  \n Start the simulation (<control-space>, and copy-and-paste the created sphere (with <control-c> then <control-v>). \n Enable   Collidable \xa0 ,  Measurable \xa0 ,  \xa0 Renderable  and  \xa0 Detectable  in the object common properties for that shape. \n Open the  \xa0 position dialog  on the  translation  tab, select the sphere representing BubbleRob's body, and enter 0.02 for  Along Z . \n Make sure that the  Relative to -item is set to  World . Then we click  Translate selection . \n Edit sphere's name. We enter  bubbleRob  and press enter. \n Add a  proximity sensor  so that  BubbleRob  knows when it is approaching obstacles: we select [Menu bar --> Add --> Proximity sensor --> Cone type]. \n In the orientation dialog on the\xa0 Rotation  tab, we enter 90 for  Around Y  and for  Around Z , then click  Rotate selection . \n In the  \xa0 position dialog , on the  position  tab, we enter 0.1 for  X-coord . and 0.12 for  Z-coord . \n Open  its properties  dialog. \n Click  Show volume parameter  to open the  \xa0 proximity sensor volume dialog . \n Adjust items  Offset  to 0.005,  Angle  to 30 and  Range  to 0.15. \n In the  proximity sensor properties , we click \xa0 Show detection parameters . \n Uncheck item  Don't allow detections if distance smaller than  then close that dialog again. \n Edit proximity sensor's name. We enter  bubbleRob_sensingNose  and press enter. Select  bubbleRob_sensingNose , then control-select bubbleRob, then click [Menu bar --> Edit --> Make last selected object parent]. \n This is what we now have: \n Create a new scene with [Menu bar --> File --> New scene]. \n Enable  \xa0 Collidable , \xa0 Measurable , \xa0 Renderable \xa0 and \xa0 Detectable  in the \xa0 object common properties \xa0 for that cylinder. \n Set the cylinder's absolute position to (0.05,0.1,0.04) and its absolute orientation to (-90,0,0). \n Change the name to  bubbleRob_leftWheel . \n Copy and paste the wheel, and set the absolute Y coordinate of the copy to -0.1. \n We rename the copy to  bubbleRob_rightWheel. \n Select the two wheels, copy them, then switch back to scene 1, then paste the wheels. \n Click [Menu bar --> Add --> Joint --> Revolute] to add a revolute joint to the scene. \n Keep the joint selected, then control-select  bubbleRob_leftWheel . \n In the  position dialog , on the  position  tab, we click the  Apply to selection  button. \n \n In the  orientation dialog , on the orientation tab, we do the same. \n \n Rename the joint to  bubbleRob_leftMotor . \n Click  Show dynamic parameters  to open the  \xa0 joint dynamics properties  dialog. \n Enable the motor , and check item Lock motor when target velocity is zero. \n Repeat the same procedure for the right motor and rename it to  bubbleRob_rightMotor . \n Attach the left wheel to the left motor, the right wheel to the right motor, then attach the two motors to  bubbleRob . \n This is what we have: \n In a new scene we and add a pure primitive sphere with diameter 0.05 and make the sphere  \xa0 Collidable , \xa0 Measurable , \xa0 Renderable \xa0and\xa0 Detectable  (if not already enabled), then rename it to bubbleRob_slider. \n Add a  force sensor objec t  with [Menu bar --> Add --> Force sensor]. \n Rename it to  bubbleRob_connection  and shift it up by 0.05. \n Attach the slider to the force sensor, then copy both objects, switch back to scene 1 and paste them. \n Shift the force sensor by -0.07 along the absolute X-axis, then attach it to the robot body. \n If we run the simulation now, we can notice that the slider is slightly moving in relation to the robot body. \n In the  shape dynamics properties ,  for  bubbleRob_slider  we set the  local respondable mask  to 00001111, and for bubbleRob, we set the  local respondable mask  to 11110000. \n If we run the simulation again, we can notice that both objects do not interfere anymore. \n This is what we now have: \n Select the two wheels and the slider, and in the shape dynamics dialog we click three times  M=M*2 (for selection) . \n The effect is that all selected shapes will have their masses multiplied by 8. \n Do the same with the inertias of the 3 selected shapes. \n Run the simulation again. \n Set the  Target velocity  to 50 for both motors. \n We run the simulation:  BubbleRob  now moves forward and eventually falls off the floor. \n Reset the  Target velocity  item to zero for both motors. \n Click [Menu bar --> Tools --> Collections] to open the  collection dialog . \n In the collection dialog, we click  Add new collection . \n While the new collection item is selected in the list, select  bubbleRob  in the scene hierarchy, and then click  Add  in the collection dialog. \n To edit the collection name, we double-click it, and rename it to  bubbleRob_collection . \n Open the  distance dialog  with [Menu bar --> Tools --> Calculation module properties]. \n In the distance dialog, we click  Add new distance object  and select a distance pair: [collection]  bubbleRob_collection  -  all other measurable objects  in the scene.  \n Rename the distance object to  bubbleRob_distance  with a double-click in its name. \n Click [Menu bar --> Add --> Graph] and rename it to  bubbleRob_graph . \n Attach the graph to bubbleRob, and set the graph's absolute coordinates to (0,0,0.005). \n Open the graph properties dialog by double-clicking its icon in the scene hierarchy. \n Uncheck  Display XYZ -planes, then click  Add new data stream to record  and select\xa0 Object: absolute x-position  for the  Data stream type , and  bubbleRob_graph  for the  Object / item to record . \n Also want to record the y and z positions: we add those data streams in a similar way as above. \n Click  Add new data stream to record  and select  Distance: segment length  for the  Data stream type , and  bubbleRob_distance  for the  Object / item to record . \n In the  Data stream recording list , we now rename Data to bubbleRob_x_pos, Data0 to bubbleRob_y_pos, Data1 to bubbleRob_z_pos, and Data2 to bubbleRob_obstacle_dist. \n Select  bubbleRob_x_pos  in the  Data Stream recording list  and in the  Time graph properties  section, uncheck  Visible . We do the same for  bubbleRob_y_pos  and  bubbleRob_z_pos . \n Click  Edit 3D curves  to open the  \xa0 XY graph and 3D curve dialog , then click  Add new curve . \n In the dialog that pops open, we select  bubbleRob_x_pos  for the  X-value  item,  bubbleRob_y_pos  for the  Y-value  item and  bubbleRob_z_po s for the  Z-value  item.  \n Rename the newly added curve from Curve to  bubbleRob_path . \n Check the  Relative to world \xa0 item and set \xa0 Curve width  to 4. \n Set one motor  target velocity  to 50, run the simulation, and will see  BubbleRob's trajectory  displayed in the scene.  \n \n \n \n Stop the simulation and reset the motor target velocity to zero. \n Add a pure primitive cylinder with following dimensions: (0.1, 0.1, 0.2). \n Disable  \xa0 Body is dynamic \xa0 in the \xa0 shape dynamics properties . \n Want our cylinder to be  Collidable , \xa0 Measurable , \xa0 Renderable \xa0 and \xa0 Detectable . \n The cylinder is still selected, we click the object translation toolbar button. \n Drag any point in the scene: the cylinder will follow the movement while always being constrained to Keep the same Z-coordinate. \n Copy and paste the cylinder a few times, and move them to positions around  BubbleRob. \n Set a  target velocity  of 50 for the left motor and run the simulation: the graph view now displays the distance to the closest obstacle and the distance segment is visible in the scene too. \n Stop the simulation and reset the target velocity to zero. \n Check items  Object is model bas e and  Object/model can transfer or accept DNA  in the  \xa0 object common properties . \n Select the two joints, the proximity sensor and the graph, then enable item  Igonred by model bounding box  and click  Apply to selection . \n Disable  camera visibility layer  2, and enable  camera visibility layer  10 for the two joints and the force sensor: this effectively hides the two joints and the force sensor \n Select the vision sensor, the two wheels, the slider, and the graph, then enable item  Select base of model instead . \n Click [Menu bar --> Add --> Vision sensor --> Perspective type]. \n Set the local position and orientation of the vision sensor to (0,0,0). \n At the same position and orientation as BubbleRob's proximity sensor. \n Open  its properties  dialog. \n Set the  Far clipping plane  item to 1, and the  Resolution x  and  Resolution y  items to 256 and 256. \n Open the  vision sensor filter dialog  by clicking  Show filter dialog . \n Select the filter component  Edge detection on work image  and click  Add filter . \n Position the newly added filter in second position (one position  up , using the up button). \n Double-click the newly added filter component and adjust its  Threshold  item to 0.2, then click  OK . \n Added floating view, right-click [Popup menu --> View --> Associate view with selected vision sensor](make sure the vision sensor is selected during that process). \n Start the simulation, then stop it again. \n Select bubbleRob and click [Menu bar --> Add --> Associated child script --> Non threaded]. \n Double-click the little script icon that appeared next to bubbleRob's name in the scene hierarchy. \n Copy and paste following code into the  \xa0 script editor , then close it: \n \n \n Run the simulation. BubbleRob now moves forward while trying to avoid obstacles. \n \n", 'tags': '', 'url': '期中Tutorial.html'}, {'title': '期中心得', 'text': '4 \n 本週上課說明了如何編輯 git credential 設定，以及利用 config 設定因應 Github 多帳號下的 ssh 連線，並利用 ssh 與 private key 對 Github 倉儲提交推送。將  https://github.com/mdecourse/cmstest  clone 後，內容複製到分組網站。 \n 5 \n 本週上課分配手足球工作後，看了許多有關手足球的影片。下課前老師讓我們自評，為今天自己做的事打個成績。 \n 6 \n 本週上課老師告知以後每週都要有自評跟互評，今天將實習任務二的 bubbleRob tutorial 看過，因為全都是英文所以花了蠻久的時間，做 V-rep 也重做了很多次才成功，之後會拍攝影片放到 youtube 上。 \n 7 \n 清明節放假。 \n 8 \n 本週上課老師說明了協同產品設計流程的教育目標，希望因應快速發展的網際雲端環境，利用敏捷可攜的程式環境，透過諸如 V-rep、Webots、ungit 與 GitExtensions 等工具，在便捷的雲端系統搭建自己能夠掌控的機械設計流程，並試圖開發出合用的工具與套件。 今天介紹了實習任務三的 Building a clean model tutorial 到第十週前要將它做完。 \n', 'tags': '', 'url': '期中心得.html'}, {'title': 'video', 'text': '建立可攜系統 \n \n bubbleRob tutorial \n \n', 'tags': '', 'url': 'video.html'}, {'title': 'Midterm report', 'text': '期中報告 \n \n', 'tags': '', 'url': 'Midterm report.html'}, {'title': '期末進度', 'text': '', 'tags': '', 'url': '期末進度.html'}, {'title': 'Onshape', 'text': '', 'tags': '', 'url': 'Onshape.html'}, {'title': '設計與繪圖', 'text': '細部設計與BOM \n 手足球零件格式說明 手足球零件格式說明 零件 BOM \n \n 零件尺寸圖 \n 手足球檯 \n \n 球桿 \n \n 足球員 \n \n 彈簧 \n \n 球門 \n \n 螺旋桿 \n \n 軌道 \n \n 送球管 \n \n 中間軌道 \n \n 零件部分組裝圖 \n 球桿+足球員+彈簧 \n \n 送球機構 \n \n 組合圖 \n \n 3D 零組件爆炸圖 \n 爆炸圖 \n', 'tags': '', 'url': '設計與繪圖.html'}, {'title': 'Issue', 'text': '1.\xa0 標註球桿時發現組員是用雲形線繪製握把的部分，但是雲形線不方便標註，於是修改成方便標註的圓弧線 。 \n ↓雲形線 \n \xa0 \n 改為圓弧線↓ \n \n \n 2.\xa0 在標球桿的工程圖時，發現用了中斷視圖後有些標註會變紅字，但如果將問題處利用放大視圖拉出再標註後，就是正常的。 \n 單純中斷視圖↓ \n \n 利用放大試圖拉出↓ \n \n', 'tags': '', 'url': 'Issue.html'}, {'title': 'V-rep', 'text': '', 'tags': '', 'url': 'V-rep.html'}, {'title': 'Tutorial', 'text': '將實習任務三 Building a clean model tutorial 所需的零件利用 onshape 繪製出。 \n \n 利用 V-rep 模擬 Building a clean model tutorial 。 \n \n', 'tags': '', 'url': 'Tutorial.html'}, {'title': '期末報告', 'text': '期末報告影片: \n \n 評分比例: \xa0 \xa0學員出席 (20%) \n \xa0 \xa0 -自評 20 分 \xa0 \xa0Github 倉儲管理\xa0 (20%) \n \xa0 \xa0 -自評 15 分 \xa0 \xa0Onshape 協同操作 (20%) \n \xa0 \xa0 -自評 20 分 \xa0 \xa0V-rep 模擬 (20%) \n \xa0 \xa0 -自評 5 分 \xa0 \xa0程式開發 (20%) \n \xa0 \xa0 -自評 0 分 \n ※總分 60 分 \n', 'tags': '', 'url': '期末報告.html'}, {'title': '期末考試', 'text': '夾娃娃機模擬 : \n \n 組合 \n 夾爪 \n claw machine.ttt', 'tags': '', 'url': '期末考試.html'}]};